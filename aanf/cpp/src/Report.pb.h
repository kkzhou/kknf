// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_Report_2eproto__INCLUDED
#define PROTOBUF_Report_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MessageFormat.pb.h"

namespace AANF_Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Report_2eproto();
void protobuf_AssignDesc_Report_2eproto();
void protobuf_ShutdownFile_Report_2eproto();

class ReportRequest;
class ReportResponse;

enum ReportResponse_ErrorCode {
  ReportResponse_ErrorCode_OK = 0,
  ReportResponse_ErrorCode_NO_SUCH_REPORT_ID = 1
};
bool ReportResponse_ErrorCode_IsValid(int value);
const ReportResponse_ErrorCode ReportResponse_ErrorCode_ErrorCode_MIN = ReportResponse_ErrorCode_OK;
const ReportResponse_ErrorCode ReportResponse_ErrorCode_ErrorCode_MAX = ReportResponse_ErrorCode_NO_SUCH_REPORT_ID;

const ::google::protobuf::EnumDescriptor* ReportResponse_ErrorCode_descriptor();
inline const ::std::string& ReportResponse_ErrorCode_Name(ReportResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReportResponse_ErrorCode_descriptor(), value);
}
inline bool ReportResponse_ErrorCode_Parse(
    const ::std::string& name, ReportResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReportResponse_ErrorCode>(
    ReportResponse_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class ReportRequest : public ::google::protobuf::Message {
 public:
  ReportRequest();
  virtual ~ReportRequest();
  
  ReportRequest(const ReportRequest& from);
  
  inline ReportRequest& operator=(const ReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportRequest& default_instance();
  void Swap(ReportRequest* other);
  
  // implements Message ----------------------------------------------
  
  ReportRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportRequest& from);
  void MergeFrom(const ReportRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 report_id = 3;
  inline bool has_report_id() const;
  inline void clear_report_id();
  static const int kReportIdFieldNumber = 3;
  inline ::google::protobuf::int32 report_id() const;
  inline void set_report_id(::google::protobuf::int32 value);
  
  // required int64 max = 4;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 4;
  inline ::google::protobuf::int64 max() const;
  inline void set_max(::google::protobuf::int64 value);
  
  // required int64 min = 5;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 5;
  inline ::google::protobuf::int64 min() const;
  inline void set_min(::google::protobuf::int64 value);
  
  // required int64 avg = 6;
  inline bool has_avg() const;
  inline void clear_avg();
  static const int kAvgFieldNumber = 6;
  inline ::google::protobuf::int64 avg() const;
  inline void set_avg(::google::protobuf::int64 value);
  
  // required int64 dev = 7;
  inline bool has_dev() const;
  inline void clear_dev();
  static const int kDevFieldNumber = 7;
  inline ::google::protobuf::int64 dev() const;
  inline void set_dev(::google::protobuf::int64 value);
  
  // required int64 cnt = 8;
  inline bool has_cnt() const;
  inline void clear_cnt();
  static const int kCntFieldNumber = 8;
  inline ::google::protobuf::int64 cnt() const;
  inline void set_cnt(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 report_id_;
  ::google::protobuf::int64 max_;
  ::google::protobuf::int64 min_;
  ::google::protobuf::int64 avg_;
  ::google::protobuf::int64 dev_;
  ::google::protobuf::int64 cnt_;
  friend void  protobuf_AddDesc_Report_2eproto();
  friend void protobuf_AssignDesc_Report_2eproto();
  friend void protobuf_ShutdownFile_Report_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReportResponse : public ::google::protobuf::Message {
 public:
  ReportResponse();
  virtual ~ReportResponse();
  
  ReportResponse(const ReportResponse& from);
  
  inline ReportResponse& operator=(const ReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportResponse& default_instance();
  void Swap(ReportResponse* other);
  
  // implements Message ----------------------------------------------
  
  ReportResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportResponse& from);
  void MergeFrom(const ReportResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ReportResponse_ErrorCode ErrorCode;
  static const ErrorCode OK = ReportResponse_ErrorCode_OK;
  static const ErrorCode NO_SUCH_REPORT_ID = ReportResponse_ErrorCode_NO_SUCH_REPORT_ID;
  static inline bool ErrorCode_IsValid(int value) {
    return ReportResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    ReportResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    ReportResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return ReportResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return ReportResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return ReportResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required int32 report_id = 3;
  inline bool has_report_id() const;
  inline void clear_report_id();
  static const int kReportIdFieldNumber = 3;
  inline ::google::protobuf::int32 report_id() const;
  inline void set_report_id(::google::protobuf::int32 value);
  
  // required .AANF_Message.ReportResponse.ErrorCode error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::AANF_Message::ReportResponse_ErrorCode error() const;
  inline void set_error(::AANF_Message::ReportResponse_ErrorCode value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 report_id_;
  int error_;
  friend void  protobuf_AddDesc_Report_2eproto();
  friend void protobuf_AssignDesc_Report_2eproto();
  friend void protobuf_ShutdownFile_Report_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ReportResponse* default_instance_;
};
// ===================================================================


// ===================================================================

static const int kReportReqFieldNumber = 103;
extern ::google::protobuf::internal::ExtensionIdentifier< ::AANF_Message::MessageFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::AANF_Message::ReportRequest >, 11, false >
  report_req;
static const int kReportRspFieldNumber = 104;
extern ::google::protobuf::internal::ExtensionIdentifier< ::AANF_Message::MessageFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::AANF_Message::ReportResponse >, 11, false >
  report_rsp;

// ===================================================================

// ReportRequest

// required int32 report_id = 3;
inline bool ReportRequest::has_report_id() const {
  return _has_bit(0);
}
inline void ReportRequest::clear_report_id() {
  report_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ReportRequest::report_id() const {
  return report_id_;
}
inline void ReportRequest::set_report_id(::google::protobuf::int32 value) {
  _set_bit(0);
  report_id_ = value;
}

// required int64 max = 4;
inline bool ReportRequest::has_max() const {
  return _has_bit(1);
}
inline void ReportRequest::clear_max() {
  max_ = GOOGLE_LONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::int64 ReportRequest::max() const {
  return max_;
}
inline void ReportRequest::set_max(::google::protobuf::int64 value) {
  _set_bit(1);
  max_ = value;
}

// required int64 min = 5;
inline bool ReportRequest::has_min() const {
  return _has_bit(2);
}
inline void ReportRequest::clear_min() {
  min_ = GOOGLE_LONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::int64 ReportRequest::min() const {
  return min_;
}
inline void ReportRequest::set_min(::google::protobuf::int64 value) {
  _set_bit(2);
  min_ = value;
}

// required int64 avg = 6;
inline bool ReportRequest::has_avg() const {
  return _has_bit(3);
}
inline void ReportRequest::clear_avg() {
  avg_ = GOOGLE_LONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::int64 ReportRequest::avg() const {
  return avg_;
}
inline void ReportRequest::set_avg(::google::protobuf::int64 value) {
  _set_bit(3);
  avg_ = value;
}

// required int64 dev = 7;
inline bool ReportRequest::has_dev() const {
  return _has_bit(4);
}
inline void ReportRequest::clear_dev() {
  dev_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 ReportRequest::dev() const {
  return dev_;
}
inline void ReportRequest::set_dev(::google::protobuf::int64 value) {
  _set_bit(4);
  dev_ = value;
}

// required int64 cnt = 8;
inline bool ReportRequest::has_cnt() const {
  return _has_bit(5);
}
inline void ReportRequest::clear_cnt() {
  cnt_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 ReportRequest::cnt() const {
  return cnt_;
}
inline void ReportRequest::set_cnt(::google::protobuf::int64 value) {
  _set_bit(5);
  cnt_ = value;
}

// -------------------------------------------------------------------

// ReportResponse

// required int32 report_id = 3;
inline bool ReportResponse::has_report_id() const {
  return _has_bit(0);
}
inline void ReportResponse::clear_report_id() {
  report_id_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 ReportResponse::report_id() const {
  return report_id_;
}
inline void ReportResponse::set_report_id(::google::protobuf::int32 value) {
  _set_bit(0);
  report_id_ = value;
}

// required .AANF_Message.ReportResponse.ErrorCode error = 4;
inline bool ReportResponse::has_error() const {
  return _has_bit(1);
}
inline void ReportResponse::clear_error() {
  error_ = 0;
  _clear_bit(1);
}
inline ::AANF_Message::ReportResponse_ErrorCode ReportResponse::error() const {
  return static_cast< ::AANF_Message::ReportResponse_ErrorCode >(error_);
}
inline void ReportResponse::set_error(::AANF_Message::ReportResponse_ErrorCode value) {
  GOOGLE_DCHECK(::AANF_Message::ReportResponse_ErrorCode_IsValid(value));
  _set_bit(1);
  error_ = value;
}


}  // namespace AANF_Message

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AANF_Message::ReportResponse_ErrorCode>() {
  return ::AANF_Message::ReportResponse_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_Report_2eproto__INCLUDED
