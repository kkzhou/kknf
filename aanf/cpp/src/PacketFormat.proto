// 唯一确定一个报文依靠：ServiceID:Type:Version
package Protocol;
message PacketFormat {
    required fixed32 length = 1;      // 用来确定报文边界，必须是fixed，必须是第一个
    required int32 service_id = 11; // 用来区分不同的业务，每类业务分配一个ID
    required int32 type = 12;      // 用来区分该业务ID下的报文类型
    required int32 version = 13;   // 报文的版本
    required int64 seq = 14;
    extensions 100 to max;         // 该报文的具体格式
}

// type 域的分配
// 101: 远程日志请求报文
// 102: 远程日志应答报文
// 103: 数据上报请求报文
// 104: 数据上报应答报文

// 100001: 测试程序C<->BF的请求报文
// 100002: 测试程序C<->BF的应答报文
// 100003: 测试程序BF<->BB1的请求报文
// 100004: 测试程序BF<->BB1的应答报文
// 100005: 测试程序BF<->BB2的请求报文
// 100006: 测试程序BF<->BB2的应答报文


// tag的分配
// 101: 远程日志请求报文
// 102: 远程日志应答报文
// 103: 数据上报请求报文
// 104: 数据上报应答报文

// 100001: 测试程序C<->BF的请求报文
// 100002: 测试程序C<->BF的应答报文
// 100003: 测试程序BF<->BB1的请求报文
// 100004: 测试程序BF<->BB1的应答报文
// 100005: 测试程序BF<->BB2的请求报文
// 100006: 测试程序BF<->BB2的应答报文

// ServiceID的分配
// 1001: 测试程序的BF
// 1002: 测试程序的BB1
// 1003: 测试程序的BB2
