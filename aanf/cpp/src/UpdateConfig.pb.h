// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_UpdateConfig_2eproto__INCLUDED
#define PROTOBUF_UpdateConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "MessageFormat.pb.h"

namespace AANF_Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UpdateConfig_2eproto();
void protobuf_AssignDesc_UpdateConfig_2eproto();
void protobuf_ShutdownFile_UpdateConfig_2eproto();

class UpdateConfigRequest;
class UpdateConfigResponse;

enum UpdateConfigResponse_ErrorCode {
  UpdateConfigResponse_ErrorCode_NO_UPDATE = 0,
  UpdateConfigResponse_ErrorCode_UPDATED = 1
};
bool UpdateConfigResponse_ErrorCode_IsValid(int value);
const UpdateConfigResponse_ErrorCode UpdateConfigResponse_ErrorCode_ErrorCode_MIN = UpdateConfigResponse_ErrorCode_NO_UPDATE;
const UpdateConfigResponse_ErrorCode UpdateConfigResponse_ErrorCode_ErrorCode_MAX = UpdateConfigResponse_ErrorCode_UPDATED;

const ::google::protobuf::EnumDescriptor* UpdateConfigResponse_ErrorCode_descriptor();
inline const ::std::string& UpdateConfigResponse_ErrorCode_Name(UpdateConfigResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateConfigResponse_ErrorCode_descriptor(), value);
}
inline bool UpdateConfigResponse_ErrorCode_Parse(
    const ::std::string& name, UpdateConfigResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateConfigResponse_ErrorCode>(
    UpdateConfigResponse_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class UpdateConfigRequest : public ::google::protobuf::Message {
 public:
  UpdateConfigRequest();
  virtual ~UpdateConfigRequest();
  
  UpdateConfigRequest(const UpdateConfigRequest& from);
  
  inline UpdateConfigRequest& operator=(const UpdateConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateConfigRequest& default_instance();
  void Swap(UpdateConfigRequest* other);
  
  // implements Message ----------------------------------------------
  
  UpdateConfigRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateConfigRequest& from);
  void MergeFrom(const UpdateConfigRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string md5 = 4;
  inline bool has_md5() const;
  inline void clear_md5();
  static const int kMd5FieldNumber = 4;
  inline const ::std::string& md5() const;
  inline void set_md5(const ::std::string& value);
  inline void set_md5(const char* value);
  inline void set_md5(const char* value, size_t size);
  inline ::std::string* mutable_md5();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* md5_;
  static const ::std::string _default_md5_;
  friend void  protobuf_AddDesc_UpdateConfig_2eproto();
  friend void protobuf_AssignDesc_UpdateConfig_2eproto();
  friend void protobuf_ShutdownFile_UpdateConfig_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UpdateConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateConfigResponse : public ::google::protobuf::Message {
 public:
  UpdateConfigResponse();
  virtual ~UpdateConfigResponse();
  
  UpdateConfigResponse(const UpdateConfigResponse& from);
  
  inline UpdateConfigResponse& operator=(const UpdateConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateConfigResponse& default_instance();
  void Swap(UpdateConfigResponse* other);
  
  // implements Message ----------------------------------------------
  
  UpdateConfigResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateConfigResponse& from);
  void MergeFrom(const UpdateConfigResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef UpdateConfigResponse_ErrorCode ErrorCode;
  static const ErrorCode NO_UPDATE = UpdateConfigResponse_ErrorCode_NO_UPDATE;
  static const ErrorCode UPDATED = UpdateConfigResponse_ErrorCode_UPDATED;
  static inline bool ErrorCode_IsValid(int value) {
    return UpdateConfigResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    UpdateConfigResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    UpdateConfigResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return UpdateConfigResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return UpdateConfigResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return UpdateConfigResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .AANF_Message.UpdateConfigResponse.ErrorCode error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::AANF_Message::UpdateConfigResponse_ErrorCode error() const;
  inline void set_error(::AANF_Message::UpdateConfigResponse_ErrorCode value);
  
  // required string md5 = 5;
  inline bool has_md5() const;
  inline void clear_md5();
  static const int kMd5FieldNumber = 5;
  inline const ::std::string& md5() const;
  inline void set_md5(const ::std::string& value);
  inline void set_md5(const char* value);
  inline void set_md5(const char* value, size_t size);
  inline ::std::string* mutable_md5();
  
  // required string config_content = 6;
  inline bool has_config_content() const;
  inline void clear_config_content();
  static const int kConfigContentFieldNumber = 6;
  inline const ::std::string& config_content() const;
  inline void set_config_content(const ::std::string& value);
  inline void set_config_content(const char* value);
  inline void set_config_content(const char* value, size_t size);
  inline ::std::string* mutable_config_content();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_;
  ::std::string* md5_;
  static const ::std::string _default_md5_;
  ::std::string* config_content_;
  static const ::std::string _default_config_content_;
  friend void  protobuf_AddDesc_UpdateConfig_2eproto();
  friend void protobuf_AssignDesc_UpdateConfig_2eproto();
  friend void protobuf_ShutdownFile_UpdateConfig_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UpdateConfigResponse* default_instance_;
};
// ===================================================================


// ===================================================================

static const int kUpdateConfigReqFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier< ::AANF_Message::MessageFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::AANF_Message::UpdateConfigRequest >, 11, false >
  update_config_req;
static const int kUpdateConfigRspFieldNumber = 102;
extern ::google::protobuf::internal::ExtensionIdentifier< ::AANF_Message::MessageFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::AANF_Message::UpdateConfigResponse >, 11, false >
  update_config_rsp;

// ===================================================================

// UpdateConfigRequest

// required string md5 = 4;
inline bool UpdateConfigRequest::has_md5() const {
  return _has_bit(0);
}
inline void UpdateConfigRequest::clear_md5() {
  if (md5_ != &_default_md5_) {
    md5_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& UpdateConfigRequest::md5() const {
  return *md5_;
}
inline void UpdateConfigRequest::set_md5(const ::std::string& value) {
  _set_bit(0);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  md5_->assign(value);
}
inline void UpdateConfigRequest::set_md5(const char* value) {
  _set_bit(0);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  md5_->assign(value);
}
inline void UpdateConfigRequest::set_md5(const char* value, size_t size) {
  _set_bit(0);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  md5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateConfigRequest::mutable_md5() {
  _set_bit(0);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  return md5_;
}

// -------------------------------------------------------------------

// UpdateConfigResponse

// required .AANF_Message.UpdateConfigResponse.ErrorCode error = 4;
inline bool UpdateConfigResponse::has_error() const {
  return _has_bit(0);
}
inline void UpdateConfigResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::AANF_Message::UpdateConfigResponse_ErrorCode UpdateConfigResponse::error() const {
  return static_cast< ::AANF_Message::UpdateConfigResponse_ErrorCode >(error_);
}
inline void UpdateConfigResponse::set_error(::AANF_Message::UpdateConfigResponse_ErrorCode value) {
  GOOGLE_DCHECK(::AANF_Message::UpdateConfigResponse_ErrorCode_IsValid(value));
  _set_bit(0);
  error_ = value;
}

// required string md5 = 5;
inline bool UpdateConfigResponse::has_md5() const {
  return _has_bit(1);
}
inline void UpdateConfigResponse::clear_md5() {
  if (md5_ != &_default_md5_) {
    md5_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& UpdateConfigResponse::md5() const {
  return *md5_;
}
inline void UpdateConfigResponse::set_md5(const ::std::string& value) {
  _set_bit(1);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  md5_->assign(value);
}
inline void UpdateConfigResponse::set_md5(const char* value) {
  _set_bit(1);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  md5_->assign(value);
}
inline void UpdateConfigResponse::set_md5(const char* value, size_t size) {
  _set_bit(1);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  md5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateConfigResponse::mutable_md5() {
  _set_bit(1);
  if (md5_ == &_default_md5_) {
    md5_ = new ::std::string;
  }
  return md5_;
}

// required string config_content = 6;
inline bool UpdateConfigResponse::has_config_content() const {
  return _has_bit(2);
}
inline void UpdateConfigResponse::clear_config_content() {
  if (config_content_ != &_default_config_content_) {
    config_content_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& UpdateConfigResponse::config_content() const {
  return *config_content_;
}
inline void UpdateConfigResponse::set_config_content(const ::std::string& value) {
  _set_bit(2);
  if (config_content_ == &_default_config_content_) {
    config_content_ = new ::std::string;
  }
  config_content_->assign(value);
}
inline void UpdateConfigResponse::set_config_content(const char* value) {
  _set_bit(2);
  if (config_content_ == &_default_config_content_) {
    config_content_ = new ::std::string;
  }
  config_content_->assign(value);
}
inline void UpdateConfigResponse::set_config_content(const char* value, size_t size) {
  _set_bit(2);
  if (config_content_ == &_default_config_content_) {
    config_content_ = new ::std::string;
  }
  config_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateConfigResponse::mutable_config_content() {
  _set_bit(2);
  if (config_content_ == &_default_config_content_) {
    config_content_ = new ::std::string;
  }
  return config_content_;
}


}  // namespace AANF_Message

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AANF_Message::UpdateConfigResponse_ErrorCode>() {
  return ::AANF_Message::UpdateConfigResponse_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_UpdateConfig_2eproto__INCLUDED
