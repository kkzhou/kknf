// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_ProtoForTest_2eproto__INCLUDED
#define PROTOBUF_ProtoForTest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "PacketFormat.pb.h"

namespace ProtoForTest {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoForTest_2eproto();
void protobuf_AssignDesc_ProtoForTest_2eproto();
void protobuf_ShutdownFile_ProtoForTest_2eproto();

class UserProfile;
class SearchUserRequest;
class SearchUserResponse;
class GetUserIDByKeywordRequest;
class GetUserIDByKeywordResponse;
class GetUserProfileRequest;
class GetUserProfileResponse;

enum SearchUserResponse_ErrorCode {
  SearchUserResponse_ErrorCode_OK = 0,
  SearchUserResponse_ErrorCode_NO_SUCH_USER = 1,
  SearchUserResponse_ErrorCode_ERROR = 2
};
bool SearchUserResponse_ErrorCode_IsValid(int value);
const SearchUserResponse_ErrorCode SearchUserResponse_ErrorCode_ErrorCode_MIN = SearchUserResponse_ErrorCode_OK;
const SearchUserResponse_ErrorCode SearchUserResponse_ErrorCode_ErrorCode_MAX = SearchUserResponse_ErrorCode_ERROR;

const ::google::protobuf::EnumDescriptor* SearchUserResponse_ErrorCode_descriptor();
inline const ::std::string& SearchUserResponse_ErrorCode_Name(SearchUserResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SearchUserResponse_ErrorCode_descriptor(), value);
}
inline bool SearchUserResponse_ErrorCode_Parse(
    const ::std::string& name, SearchUserResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SearchUserResponse_ErrorCode>(
    SearchUserResponse_ErrorCode_descriptor(), name, value);
}
enum GetUserIDByKeywordResponse_ErrorCode {
  GetUserIDByKeywordResponse_ErrorCode_OK = 0,
  GetUserIDByKeywordResponse_ErrorCode_NO_SUCH_USER = 1,
  GetUserIDByKeywordResponse_ErrorCode_ERROR = 2
};
bool GetUserIDByKeywordResponse_ErrorCode_IsValid(int value);
const GetUserIDByKeywordResponse_ErrorCode GetUserIDByKeywordResponse_ErrorCode_ErrorCode_MIN = GetUserIDByKeywordResponse_ErrorCode_OK;
const GetUserIDByKeywordResponse_ErrorCode GetUserIDByKeywordResponse_ErrorCode_ErrorCode_MAX = GetUserIDByKeywordResponse_ErrorCode_ERROR;

const ::google::protobuf::EnumDescriptor* GetUserIDByKeywordResponse_ErrorCode_descriptor();
inline const ::std::string& GetUserIDByKeywordResponse_ErrorCode_Name(GetUserIDByKeywordResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUserIDByKeywordResponse_ErrorCode_descriptor(), value);
}
inline bool GetUserIDByKeywordResponse_ErrorCode_Parse(
    const ::std::string& name, GetUserIDByKeywordResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUserIDByKeywordResponse_ErrorCode>(
    GetUserIDByKeywordResponse_ErrorCode_descriptor(), name, value);
}
enum GetUserProfileResponse_ErrorCode {
  GetUserProfileResponse_ErrorCode_OK = 0,
  GetUserProfileResponse_ErrorCode_NO_SUCH_USER = 1,
  GetUserProfileResponse_ErrorCode_ERROR = 2
};
bool GetUserProfileResponse_ErrorCode_IsValid(int value);
const GetUserProfileResponse_ErrorCode GetUserProfileResponse_ErrorCode_ErrorCode_MIN = GetUserProfileResponse_ErrorCode_OK;
const GetUserProfileResponse_ErrorCode GetUserProfileResponse_ErrorCode_ErrorCode_MAX = GetUserProfileResponse_ErrorCode_ERROR;

const ::google::protobuf::EnumDescriptor* GetUserProfileResponse_ErrorCode_descriptor();
inline const ::std::string& GetUserProfileResponse_ErrorCode_Name(GetUserProfileResponse_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetUserProfileResponse_ErrorCode_descriptor(), value);
}
inline bool GetUserProfileResponse_ErrorCode_Parse(
    const ::std::string& name, GetUserProfileResponse_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetUserProfileResponse_ErrorCode>(
    GetUserProfileResponse_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class UserProfile : public ::google::protobuf::Message {
 public:
  UserProfile();
  virtual ~UserProfile();
  
  UserProfile(const UserProfile& from);
  
  inline UserProfile& operator=(const UserProfile& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserProfile& default_instance();
  void Swap(UserProfile* other);
  
  // implements Message ----------------------------------------------
  
  UserProfile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserProfile& from);
  void MergeFrom(const UserProfile& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int64 user_id() const;
  inline void set_user_id(::google::protobuf::int64 value);
  
  // required string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  
  // required string user_desc = 3;
  inline bool has_user_desc() const;
  inline void clear_user_desc();
  static const int kUserDescFieldNumber = 3;
  inline const ::std::string& user_desc() const;
  inline void set_user_desc(const ::std::string& value);
  inline void set_user_desc(const char* value);
  inline void set_user_desc(const char* value, size_t size);
  inline ::std::string* mutable_user_desc();
  
  // required int32 gender = 4;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 4;
  inline ::google::protobuf::int32 gender() const;
  inline void set_gender(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int64 user_id_;
  ::std::string* user_name_;
  static const ::std::string _default_user_name_;
  ::std::string* user_desc_;
  static const ::std::string _default_user_desc_;
  ::google::protobuf::int32 gender_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static UserProfile* default_instance_;
};
// -------------------------------------------------------------------

class SearchUserRequest : public ::google::protobuf::Message {
 public:
  SearchUserRequest();
  virtual ~SearchUserRequest();
  
  SearchUserRequest(const SearchUserRequest& from);
  
  inline SearchUserRequest& operator=(const SearchUserRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchUserRequest& default_instance();
  void Swap(SearchUserRequest* other);
  
  // implements Message ----------------------------------------------
  
  SearchUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchUserRequest& from);
  void MergeFrom(const SearchUserRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string query_string = 4;
  inline bool has_query_string() const;
  inline void clear_query_string();
  static const int kQueryStringFieldNumber = 4;
  inline const ::std::string& query_string() const;
  inline void set_query_string(const ::std::string& value);
  inline void set_query_string(const char* value);
  inline void set_query_string(const char* value, size_t size);
  inline ::std::string* mutable_query_string();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* query_string_;
  static const ::std::string _default_query_string_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SearchUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchUserResponse : public ::google::protobuf::Message {
 public:
  SearchUserResponse();
  virtual ~SearchUserResponse();
  
  SearchUserResponse(const SearchUserResponse& from);
  
  inline SearchUserResponse& operator=(const SearchUserResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchUserResponse& default_instance();
  void Swap(SearchUserResponse* other);
  
  // implements Message ----------------------------------------------
  
  SearchUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchUserResponse& from);
  void MergeFrom(const SearchUserResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef SearchUserResponse_ErrorCode ErrorCode;
  static const ErrorCode OK = SearchUserResponse_ErrorCode_OK;
  static const ErrorCode NO_SUCH_USER = SearchUserResponse_ErrorCode_NO_SUCH_USER;
  static const ErrorCode ERROR = SearchUserResponse_ErrorCode_ERROR;
  static inline bool ErrorCode_IsValid(int value) {
    return SearchUserResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    SearchUserResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    SearchUserResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return SearchUserResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return SearchUserResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return SearchUserResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .ProtoForTest.SearchUserResponse.ErrorCode error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::ProtoForTest::SearchUserResponse_ErrorCode error() const;
  inline void set_error(::ProtoForTest::SearchUserResponse_ErrorCode value);
  
  // repeated .ProtoForTest.UserProfile user_profile_list = 5;
  inline int user_profile_list_size() const;
  inline void clear_user_profile_list();
  static const int kUserProfileListFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >& user_profile_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >* mutable_user_profile_list();
  inline const ::ProtoForTest::UserProfile& user_profile_list(int index) const;
  inline ::ProtoForTest::UserProfile* mutable_user_profile_list(int index);
  inline ::ProtoForTest::UserProfile* add_user_profile_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_;
  ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile > user_profile_list_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SearchUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserIDByKeywordRequest : public ::google::protobuf::Message {
 public:
  GetUserIDByKeywordRequest();
  virtual ~GetUserIDByKeywordRequest();
  
  GetUserIDByKeywordRequest(const GetUserIDByKeywordRequest& from);
  
  inline GetUserIDByKeywordRequest& operator=(const GetUserIDByKeywordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserIDByKeywordRequest& default_instance();
  void Swap(GetUserIDByKeywordRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetUserIDByKeywordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserIDByKeywordRequest& from);
  void MergeFrom(const GetUserIDByKeywordRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string user_name_keyword = 4;
  inline int user_name_keyword_size() const;
  inline void clear_user_name_keyword();
  static const int kUserNameKeywordFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& user_name_keyword() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_user_name_keyword();
  inline const ::std::string& user_name_keyword(int index) const;
  inline ::std::string* mutable_user_name_keyword(int index);
  inline void set_user_name_keyword(int index, const ::std::string& value);
  inline void set_user_name_keyword(int index, const char* value);
  inline void set_user_name_keyword(int index, const char* value, size_t size);
  inline ::std::string* add_user_name_keyword();
  inline void add_user_name_keyword(const ::std::string& value);
  inline void add_user_name_keyword(const char* value);
  inline void add_user_name_keyword(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> user_name_keyword_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetUserIDByKeywordRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserIDByKeywordResponse : public ::google::protobuf::Message {
 public:
  GetUserIDByKeywordResponse();
  virtual ~GetUserIDByKeywordResponse();
  
  GetUserIDByKeywordResponse(const GetUserIDByKeywordResponse& from);
  
  inline GetUserIDByKeywordResponse& operator=(const GetUserIDByKeywordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserIDByKeywordResponse& default_instance();
  void Swap(GetUserIDByKeywordResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetUserIDByKeywordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserIDByKeywordResponse& from);
  void MergeFrom(const GetUserIDByKeywordResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GetUserIDByKeywordResponse_ErrorCode ErrorCode;
  static const ErrorCode OK = GetUserIDByKeywordResponse_ErrorCode_OK;
  static const ErrorCode NO_SUCH_USER = GetUserIDByKeywordResponse_ErrorCode_NO_SUCH_USER;
  static const ErrorCode ERROR = GetUserIDByKeywordResponse_ErrorCode_ERROR;
  static inline bool ErrorCode_IsValid(int value) {
    return GetUserIDByKeywordResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    GetUserIDByKeywordResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    GetUserIDByKeywordResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return GetUserIDByKeywordResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return GetUserIDByKeywordResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return GetUserIDByKeywordResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .ProtoForTest.GetUserIDByKeywordResponse.ErrorCode error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode error() const;
  inline void set_error(::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode value);
  
  // repeated int64 user_id_list = 5;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 5;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& user_id_list() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_user_id_list();
  inline ::google::protobuf::int64 user_id_list(int index) const;
  inline void set_user_id_list(int index, ::google::protobuf::int64 value);
  inline void add_user_id_list(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_id_list_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetUserIDByKeywordResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetUserProfileRequest : public ::google::protobuf::Message {
 public:
  GetUserProfileRequest();
  virtual ~GetUserProfileRequest();
  
  GetUserProfileRequest(const GetUserProfileRequest& from);
  
  inline GetUserProfileRequest& operator=(const GetUserProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserProfileRequest& default_instance();
  void Swap(GetUserProfileRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetUserProfileRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserProfileRequest& from);
  void MergeFrom(const GetUserProfileRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int64 user_id_list = 4;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 4;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >& user_id_list() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >* mutable_user_id_list();
  inline ::google::protobuf::int64 user_id_list(int index) const;
  inline void set_user_id_list(int index, ::google::protobuf::int64 value);
  inline void add_user_id_list(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > user_id_list_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetUserProfileRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetUserProfileResponse : public ::google::protobuf::Message {
 public:
  GetUserProfileResponse();
  virtual ~GetUserProfileResponse();
  
  GetUserProfileResponse(const GetUserProfileResponse& from);
  
  inline GetUserProfileResponse& operator=(const GetUserProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserProfileResponse& default_instance();
  void Swap(GetUserProfileResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetUserProfileResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserProfileResponse& from);
  void MergeFrom(const GetUserProfileResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GetUserProfileResponse_ErrorCode ErrorCode;
  static const ErrorCode OK = GetUserProfileResponse_ErrorCode_OK;
  static const ErrorCode NO_SUCH_USER = GetUserProfileResponse_ErrorCode_NO_SUCH_USER;
  static const ErrorCode ERROR = GetUserProfileResponse_ErrorCode_ERROR;
  static inline bool ErrorCode_IsValid(int value) {
    return GetUserProfileResponse_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    GetUserProfileResponse_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    GetUserProfileResponse_ErrorCode_ErrorCode_MAX;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return GetUserProfileResponse_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return GetUserProfileResponse_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return GetUserProfileResponse_ErrorCode_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .ProtoForTest.GetUserProfileResponse.ErrorCode error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline ::ProtoForTest::GetUserProfileResponse_ErrorCode error() const;
  inline void set_error(::ProtoForTest::GetUserProfileResponse_ErrorCode value);
  
  // repeated .ProtoForTest.UserProfile user_profile_list = 5;
  inline int user_profile_list_size() const;
  inline void clear_user_profile_list();
  static const int kUserProfileListFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >& user_profile_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >* mutable_user_profile_list();
  inline const ::ProtoForTest::UserProfile& user_profile_list(int index) const;
  inline ::ProtoForTest::UserProfile* mutable_user_profile_list(int index);
  inline ::ProtoForTest::UserProfile* add_user_profile_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int error_;
  ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile > user_profile_list_;
  friend void  protobuf_AddDesc_ProtoForTest_2eproto();
  friend void protobuf_AssignDesc_ProtoForTest_2eproto();
  friend void protobuf_ShutdownFile_ProtoForTest_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static GetUserProfileResponse* default_instance_;
};
// ===================================================================


// ===================================================================

static const int kClientSearchUserReqFieldNumber = 201;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::PacketFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::ProtoForTest::SearchUserRequest >, 11, false >
  client_search_user_req;
static const int kClientSearchUserRspFieldNumber = 202;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::PacketFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::ProtoForTest::SearchUserResponse >, 11, false >
  client_search_user_rsp;
static const int kBbGetUserIdByKeywordReqFieldNumber = 203;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::PacketFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::ProtoForTest::GetUserIDByKeywordRequest >, 11, false >
  bb_get_user_id_by_keyword_req;
static const int kBbGetUserIdByKeywordRspFieldNumber = 204;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::PacketFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::ProtoForTest::GetUserIDByKeywordResponse >, 11, false >
  bb_get_user_id_by_keyword_rsp;
static const int kBbGetUserProfileReqFieldNumber = 205;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::PacketFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::ProtoForTest::GetUserProfileRequest >, 11, false >
  bb_get_user_profile_req;
static const int kBbGetUserProfileRspFieldNumber = 206;
extern ::google::protobuf::internal::ExtensionIdentifier< ::Protocol::PacketFormat,
    ::google::protobuf::internal::MessageTypeTraits< ::ProtoForTest::GetUserProfileResponse >, 11, false >
  bb_get_user_profile_rsp;

// ===================================================================

// UserProfile

// required int64 user_id = 1;
inline bool UserProfile::has_user_id() const {
  return _has_bit(0);
}
inline void UserProfile::clear_user_id() {
  user_id_ = GOOGLE_LONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::int64 UserProfile::user_id() const {
  return user_id_;
}
inline void UserProfile::set_user_id(::google::protobuf::int64 value) {
  _set_bit(0);
  user_id_ = value;
}

// required string user_name = 2;
inline bool UserProfile::has_user_name() const {
  return _has_bit(1);
}
inline void UserProfile::clear_user_name() {
  if (user_name_ != &_default_user_name_) {
    user_name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& UserProfile::user_name() const {
  return *user_name_;
}
inline void UserProfile::set_user_name(const ::std::string& value) {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void UserProfile::set_user_name(const char* value) {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void UserProfile::set_user_name(const char* value, size_t size) {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserProfile::mutable_user_name() {
  _set_bit(1);
  if (user_name_ == &_default_user_name_) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}

// required string user_desc = 3;
inline bool UserProfile::has_user_desc() const {
  return _has_bit(2);
}
inline void UserProfile::clear_user_desc() {
  if (user_desc_ != &_default_user_desc_) {
    user_desc_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& UserProfile::user_desc() const {
  return *user_desc_;
}
inline void UserProfile::set_user_desc(const ::std::string& value) {
  _set_bit(2);
  if (user_desc_ == &_default_user_desc_) {
    user_desc_ = new ::std::string;
  }
  user_desc_->assign(value);
}
inline void UserProfile::set_user_desc(const char* value) {
  _set_bit(2);
  if (user_desc_ == &_default_user_desc_) {
    user_desc_ = new ::std::string;
  }
  user_desc_->assign(value);
}
inline void UserProfile::set_user_desc(const char* value, size_t size) {
  _set_bit(2);
  if (user_desc_ == &_default_user_desc_) {
    user_desc_ = new ::std::string;
  }
  user_desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UserProfile::mutable_user_desc() {
  _set_bit(2);
  if (user_desc_ == &_default_user_desc_) {
    user_desc_ = new ::std::string;
  }
  return user_desc_;
}

// required int32 gender = 4;
inline bool UserProfile::has_gender() const {
  return _has_bit(3);
}
inline void UserProfile::clear_gender() {
  gender_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 UserProfile::gender() const {
  return gender_;
}
inline void UserProfile::set_gender(::google::protobuf::int32 value) {
  _set_bit(3);
  gender_ = value;
}

// -------------------------------------------------------------------

// SearchUserRequest

// required string query_string = 4;
inline bool SearchUserRequest::has_query_string() const {
  return _has_bit(0);
}
inline void SearchUserRequest::clear_query_string() {
  if (query_string_ != &_default_query_string_) {
    query_string_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& SearchUserRequest::query_string() const {
  return *query_string_;
}
inline void SearchUserRequest::set_query_string(const ::std::string& value) {
  _set_bit(0);
  if (query_string_ == &_default_query_string_) {
    query_string_ = new ::std::string;
  }
  query_string_->assign(value);
}
inline void SearchUserRequest::set_query_string(const char* value) {
  _set_bit(0);
  if (query_string_ == &_default_query_string_) {
    query_string_ = new ::std::string;
  }
  query_string_->assign(value);
}
inline void SearchUserRequest::set_query_string(const char* value, size_t size) {
  _set_bit(0);
  if (query_string_ == &_default_query_string_) {
    query_string_ = new ::std::string;
  }
  query_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SearchUserRequest::mutable_query_string() {
  _set_bit(0);
  if (query_string_ == &_default_query_string_) {
    query_string_ = new ::std::string;
  }
  return query_string_;
}

// -------------------------------------------------------------------

// SearchUserResponse

// required .ProtoForTest.SearchUserResponse.ErrorCode error = 4;
inline bool SearchUserResponse::has_error() const {
  return _has_bit(0);
}
inline void SearchUserResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::ProtoForTest::SearchUserResponse_ErrorCode SearchUserResponse::error() const {
  return static_cast< ::ProtoForTest::SearchUserResponse_ErrorCode >(error_);
}
inline void SearchUserResponse::set_error(::ProtoForTest::SearchUserResponse_ErrorCode value) {
  GOOGLE_DCHECK(::ProtoForTest::SearchUserResponse_ErrorCode_IsValid(value));
  _set_bit(0);
  error_ = value;
}

// repeated .ProtoForTest.UserProfile user_profile_list = 5;
inline int SearchUserResponse::user_profile_list_size() const {
  return user_profile_list_.size();
}
inline void SearchUserResponse::clear_user_profile_list() {
  user_profile_list_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >&
SearchUserResponse::user_profile_list() const {
  return user_profile_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >*
SearchUserResponse::mutable_user_profile_list() {
  return &user_profile_list_;
}
inline const ::ProtoForTest::UserProfile& SearchUserResponse::user_profile_list(int index) const {
  return user_profile_list_.Get(index);
}
inline ::ProtoForTest::UserProfile* SearchUserResponse::mutable_user_profile_list(int index) {
  return user_profile_list_.Mutable(index);
}
inline ::ProtoForTest::UserProfile* SearchUserResponse::add_user_profile_list() {
  return user_profile_list_.Add();
}

// -------------------------------------------------------------------

// GetUserIDByKeywordRequest

// repeated string user_name_keyword = 4;
inline int GetUserIDByKeywordRequest::user_name_keyword_size() const {
  return user_name_keyword_.size();
}
inline void GetUserIDByKeywordRequest::clear_user_name_keyword() {
  user_name_keyword_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetUserIDByKeywordRequest::user_name_keyword() const {
  return user_name_keyword_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetUserIDByKeywordRequest::mutable_user_name_keyword() {
  return &user_name_keyword_;
}
inline const ::std::string& GetUserIDByKeywordRequest::user_name_keyword(int index) const {
  return user_name_keyword_.Get(index);
}
inline ::std::string* GetUserIDByKeywordRequest::mutable_user_name_keyword(int index) {
  return user_name_keyword_.Mutable(index);
}
inline void GetUserIDByKeywordRequest::set_user_name_keyword(int index, const ::std::string& value) {
  user_name_keyword_.Mutable(index)->assign(value);
}
inline void GetUserIDByKeywordRequest::set_user_name_keyword(int index, const char* value) {
  user_name_keyword_.Mutable(index)->assign(value);
}
inline void GetUserIDByKeywordRequest::set_user_name_keyword(int index, const char* value, size_t size) {
  user_name_keyword_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserIDByKeywordRequest::add_user_name_keyword() {
  return user_name_keyword_.Add();
}
inline void GetUserIDByKeywordRequest::add_user_name_keyword(const ::std::string& value) {
  user_name_keyword_.Add()->assign(value);
}
inline void GetUserIDByKeywordRequest::add_user_name_keyword(const char* value) {
  user_name_keyword_.Add()->assign(value);
}
inline void GetUserIDByKeywordRequest::add_user_name_keyword(const char* value, size_t size) {
  user_name_keyword_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// GetUserIDByKeywordResponse

// required .ProtoForTest.GetUserIDByKeywordResponse.ErrorCode error = 4;
inline bool GetUserIDByKeywordResponse::has_error() const {
  return _has_bit(0);
}
inline void GetUserIDByKeywordResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode GetUserIDByKeywordResponse::error() const {
  return static_cast< ::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode >(error_);
}
inline void GetUserIDByKeywordResponse::set_error(::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode value) {
  GOOGLE_DCHECK(::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode_IsValid(value));
  _set_bit(0);
  error_ = value;
}

// repeated int64 user_id_list = 5;
inline int GetUserIDByKeywordResponse::user_id_list_size() const {
  return user_id_list_.size();
}
inline void GetUserIDByKeywordResponse::clear_user_id_list() {
  user_id_list_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetUserIDByKeywordResponse::user_id_list() const {
  return user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetUserIDByKeywordResponse::mutable_user_id_list() {
  return &user_id_list_;
}
inline ::google::protobuf::int64 GetUserIDByKeywordResponse::user_id_list(int index) const {
  return user_id_list_.Get(index);
}
inline void GetUserIDByKeywordResponse::set_user_id_list(int index, ::google::protobuf::int64 value) {
  user_id_list_.Set(index, value);
}
inline void GetUserIDByKeywordResponse::add_user_id_list(::google::protobuf::int64 value) {
  user_id_list_.Add(value);
}

// -------------------------------------------------------------------

// GetUserProfileRequest

// repeated int64 user_id_list = 4;
inline int GetUserProfileRequest::user_id_list_size() const {
  return user_id_list_.size();
}
inline void GetUserProfileRequest::clear_user_id_list() {
  user_id_list_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GetUserProfileRequest::user_id_list() const {
  return user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GetUserProfileRequest::mutable_user_id_list() {
  return &user_id_list_;
}
inline ::google::protobuf::int64 GetUserProfileRequest::user_id_list(int index) const {
  return user_id_list_.Get(index);
}
inline void GetUserProfileRequest::set_user_id_list(int index, ::google::protobuf::int64 value) {
  user_id_list_.Set(index, value);
}
inline void GetUserProfileRequest::add_user_id_list(::google::protobuf::int64 value) {
  user_id_list_.Add(value);
}

// -------------------------------------------------------------------

// GetUserProfileResponse

// required .ProtoForTest.GetUserProfileResponse.ErrorCode error = 4;
inline bool GetUserProfileResponse::has_error() const {
  return _has_bit(0);
}
inline void GetUserProfileResponse::clear_error() {
  error_ = 0;
  _clear_bit(0);
}
inline ::ProtoForTest::GetUserProfileResponse_ErrorCode GetUserProfileResponse::error() const {
  return static_cast< ::ProtoForTest::GetUserProfileResponse_ErrorCode >(error_);
}
inline void GetUserProfileResponse::set_error(::ProtoForTest::GetUserProfileResponse_ErrorCode value) {
  GOOGLE_DCHECK(::ProtoForTest::GetUserProfileResponse_ErrorCode_IsValid(value));
  _set_bit(0);
  error_ = value;
}

// repeated .ProtoForTest.UserProfile user_profile_list = 5;
inline int GetUserProfileResponse::user_profile_list_size() const {
  return user_profile_list_.size();
}
inline void GetUserProfileResponse::clear_user_profile_list() {
  user_profile_list_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >&
GetUserProfileResponse::user_profile_list() const {
  return user_profile_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoForTest::UserProfile >*
GetUserProfileResponse::mutable_user_profile_list() {
  return &user_profile_list_;
}
inline const ::ProtoForTest::UserProfile& GetUserProfileResponse::user_profile_list(int index) const {
  return user_profile_list_.Get(index);
}
inline ::ProtoForTest::UserProfile* GetUserProfileResponse::mutable_user_profile_list(int index) {
  return user_profile_list_.Mutable(index);
}
inline ::ProtoForTest::UserProfile* GetUserProfileResponse::add_user_profile_list() {
  return user_profile_list_.Add();
}


}  // namespace ProtoForTest

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoForTest::SearchUserResponse_ErrorCode>() {
  return ::ProtoForTest::SearchUserResponse_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode>() {
  return ::ProtoForTest::GetUserIDByKeywordResponse_ErrorCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoForTest::GetUserProfileResponse_ErrorCode>() {
  return ::ProtoForTest::GetUserProfileResponse_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_ProtoForTest_2eproto__INCLUDED
